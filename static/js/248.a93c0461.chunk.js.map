{"version":3,"file":"static/js/248.a93c0461.chunk.js","mappings":"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","sources":["Container/StockAverage/index.js","App.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\n\r\nconst priceContent = [\r\n  {\r\n    title: \"First Purchase\",\r\n    type: \"first\",\r\n    units: \"\",\r\n    price: \"\",\r\n    id: \"first\"\r\n  },\r\n  {\r\n    title: \"Second Purchase\",\r\n    type: \"second\",\r\n    units: \"\",\r\n    price: \"\",\r\n    id: \"second\"\r\n  }\r\n];\r\n\r\nconst purchaseItems = [\r\n  {\r\n    title: \"Expected Average Price\",\r\n    value: \"averagePrice\",\r\n    price: 0,\r\n    extra: \"previousAverage\",\r\n    styleClass: \"border-2\"\r\n  },\r\n  {\r\n    title: \"To Spend on Second Purchase\",\r\n    value: \"secondPurchase\",\r\n    price: 0,\r\n    styleClass: \"bg-green-200 border-2\"\r\n  },\r\n  {\r\n    title: \"Total Quantity after buy\",\r\n    value: \"totalUnits\",\r\n    price: 0,\r\n    extra: \"previousUnits\",\r\n    styleClass: \"border-2\"\r\n  },\r\n  {\r\n    title: \"Invested on First Purchase\",\r\n    value: \"firstPurchase\",\r\n    price: 0,\r\n    styleClass: \"bg-lime-200 border-2\"\r\n  },\r\n  {\r\n    title: \"Totally Invested after Purchase\",\r\n    value: \"totalAmount\",\r\n    price: 0,\r\n    styleClass: \"border-2\"\r\n  }\r\n];\r\n\r\nfunction StockAverageCalculator() {\r\n  const [priceList, setPriceList] = useState(priceContent);\r\n  const [purchaseValue, setPurchaseValue] = useState([...purchaseItems]);\r\n  const priceRef = useRef(priceContent);\r\n\r\n  const PurchaseList = () => {\r\n    return purchaseValue.map((item, index) => {\r\n      const {\r\n        title,\r\n        price = \"\",\r\n        styleClass = \"\",\r\n        extra = false,\r\n        previousPrice = false\r\n      } = item;\r\n      return (\r\n        <div\r\n          key={title + index}\r\n          className={`text-sm py-0.5 px-2.5\trounded-md shadow-md flex flex-col justify-between items-center my-1 ${styleClass}`}\r\n        >\r\n          <label className=\"text-center m-1\">{title}</label>\r\n          <div className=\"flex-1 text-center m-1 font-bold text-xl\">\r\n            {extra && previousPrice && previousPrice + \" => \"}\r\n            {price.toLocaleString(\"en-IN\")}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const handleCalculate = () => {\r\n    //First Purchase => unit 1 * price 1\r\n    //Second Purchase => unit 2 * price 2\r\n\r\n    //Total Units => unit 1 + unit 2\r\n    //Average unit => total amount/total units\r\n    //Total Amount => first purchase + second Purchase\r\n\r\n    let data = priceRef.current;\r\n    debugger;\r\n\r\n    const combined = data.reduce(\r\n      (accumulator, currentItem, index) => {\r\n        const units = Number(currentItem.units);\r\n        const price = Number(currentItem.price);\r\n\r\n        if (index === 0) {\r\n          accumulator.firstPurchase = units * price;\r\n          accumulator.previousAverage = price;\r\n          accumulator.previousUnits = units;\r\n        } else {\r\n          accumulator.secondPurchase = units * price;\r\n        }\r\n\r\n        accumulator.totalUnits += units;\r\n        accumulator.totalAmount += units * price;\r\n        accumulator.averagePrice = Number(\r\n          accumulator.totalAmount / accumulator.totalUnits\r\n        ).toFixed(2);\r\n\r\n        return accumulator;\r\n      },\r\n      { totalUnits: 0, totalAmount: 0, averagePrice: 0 }\r\n    );\r\n\r\n    const mergedData = purchaseValue.map((i, index) => {\r\n      return {\r\n        ...i,\r\n        price: combined[i.value],\r\n        previousPrice: combined[i.extra] || \"\"\r\n      };\r\n    });\r\n\r\n    setPurchaseValue([...mergedData]);\r\n    setPriceList(data);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setPurchaseValue(purchaseItems);\r\n    setPriceList(priceContent);\r\n  };\r\n\r\n  const CalculatorList = () => {\r\n    return priceList.map((i, index) => {\r\n      const { title, units = \"\", price = \"\" } = i;\r\n      return (\r\n        <div key={index + title} className=\"average-list m-4\">\r\n          <div\r\n            className={`font-semibold my-2 ${\r\n              index === 0 ? \"bg-lime-200\" : \"bg-green-200\"\r\n            } text-center rounded-md`}\r\n          >\r\n            {title}\r\n          </div>\r\n          <div className=\"flex flex-col my-2\">\r\n            <label htmlFor={`unit_${index}`} className=\"font-medium my-1\">\r\n              Quantity\r\n            </label>\r\n            <input\r\n              id={`unit_${index}`}\r\n              maxLength=\"15\"\r\n              defaultValue={units}\r\n              onChange={(el) => {\r\n                return (priceRef.current[index][\"units\"] = el.target.value);\r\n              }}\r\n              className=\"border-2 py-0.5 px-3 border-sky-200 rounded-md\"\r\n            />\r\n          </div>\r\n          <div className=\"flex flex-col\">\r\n            <label htmlFor={`price_${index}`} className=\"font-medium my-1\">\r\n              Price Per Share\r\n            </label>\r\n            <input\r\n              id={`price_${index}`}\r\n              maxLength=\"15\"\r\n              defaultValue={price}\r\n              onChange={(el) => {\r\n                return (priceRef.current[index][\"price\"] = el.target.value);\r\n              }}\r\n              className=\"border-2 py-0.5 px-3 border-sky-200 rounded-md\"\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex w-11/12 items-baseline justify-evenly\">\r\n      <div className=\"flex flex-col justify-center border-2 shadow-md rounded-md p-4 \">\r\n        <div className=\"text-center text-xl font-bold title-wrap uppercase\">\r\n          Stock Average Calculator\r\n        </div>\r\n\r\n        <div>\r\n          <div className=\"flex average-container-wrapper\">\r\n            <CalculatorList />\r\n          </div>\r\n\r\n          <div className=\"flex justify-end m-2\">\r\n            <button onClick={handleClear} className=\"btn-primary mx-2\">\r\n              Clear Fields\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              onClick={handleCalculate}\r\n              className=\"btn-secondary\"\r\n            >\r\n              Calculate Average\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex flex-col border-2 shadow-md rounded-md p-4\">\r\n        <div className=\"flex flex-col justify-center average-list-wrapper w-64 m-2 mt-0 \">\r\n          <div className=\"text-center uppercase text-xl font-bold title-wrap mb-2\">\r\n            Calculated Average\r\n          </div>\r\n          <PurchaseList />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StockAverageCalculator;\r\n","import React from \"react\";\nimport StockAverageCalculator from \"./Container/StockAverage\";\n\nfunction App() {\n  return (\n    <>\n      <StockAverageCalculator />\n    </>\n  );\n}\n\nexport default App;\n"],"names":["priceContent","title","type","units","price","id","purchaseItems","value","extra","styleClass","priceList","setPriceList","useState","purchaseValue","setPurchaseValue","priceRef","useRef","PurchaseList","map","item","index","previousPrice","_jsxs","className","concat","children","_jsx","toLocaleString","CalculatorList","i","htmlFor","maxLength","defaultValue","onChange","el","current","target","onClick","handleClear","handleCalculate","data","combined","reduce","accumulator","currentItem","Number","firstPurchase","previousAverage","previousUnits","secondPurchase","totalUnits","totalAmount","averagePrice","toFixed","mergedData","_Fragment","StockAverageCalculator"],"sourceRoot":""}